#+TODO: ACTIVE | DISABLED


*** Programming 
Lsp + autres choses. LSP gère tout, le reste se connecte à lsp. De plus, je hook les modes à lsp, et j'active le reste lorque lsp-mode est activé. Mettre les commandes pour installer les languages server protoc

Pour installer facilement un language server protocol, deux cas :
1. Soit vous avez lsp ou lsp-nomDuLanguage (comme lsp-java) qui existe, vous l'activer correctement avec le mode (java, C, etc), et LSP va alors voir qu'il n'y a aucun language server protocol d'installer.
   dans ce cas, il va le télécharger (une fois), puis se connecter et en avant.
2. Sinon, il va falloir télécharger manuellement le language-server-protocol pour que LSP le détecte et se connecte à celui-ci. Suivre les instructions ici :
   https://emacs-lsp.github.io/lsp-mode/page/languages/

[[https://www.mortens.dev/blog/emacs-and-the-language-server-protocol/index.html][un lien qui permet peut-être de mieux expliquer ?]]
   
**** Lsp 
***** Lsp moteur + quand se déclare lsp
****** Moteur de lsp-mode
#+begin_src emacs-lisp

  (use-package lsp-mode
    :hook (((
             ;; les modes qui active lsp, et donc tout le reste
             typescript-mode
             js2-mode
             web-mode
             c-mode
             python-mode
             java-mode
             )
            . lsp)

           ;; compatibilité avec which-key
           (lsp-mode . lsp-enable-which-key-integration)
           )
    :config
    ;; pour mapper lsp-command-map
    (define-key lsp-mode-map (kbd "C-c l") lsp-command-map)

    ;;pour de meilleurs performances
    ;; (setq gc-cons-threshold 100000000)
    ;; (setq read-process-output-max (* 1024 1024)) ;; 1mb
    ;; (setq lsp-idle-delay 0.500)
    (setq lsp-log-io nil) ; if set to true can cause a performance hit

    ;; les options, voir le lien au dessus

    ;; (setq lsp-ui-doc-enable nil)
    ;; (setq lsp-ui-doc-show-with-cursor nil) ;; enlever les gros pavés qui se mettent à chaque fois
    )


#+end_src
****** Lsp-ui (pour les infos qd curseur dessus)
#+begin_src emacs-lisp
  (use-package lsp-ui
    :hook (lsp-mode . lsp-ui-mode)
    :custom
    (lsp-ui-doc-position 'bottom))
#+end_src
****** Pour les fichiers sur le côté
#+begin_src emacs-lisp
  (use-package lsp-treemacs
    :after lsp
    :config
    ;; pour syncro les dossier treemacs avec lsp
    ;;suis pour lsp
    ;; (lsp-treemacs-sync-mode 1)	 
    )
#+end_src

***** New language understand with emacs + lsp mode
****** C
****** TODO Python

#+begin_src emacs-lisp

  ;; (use-package lsp-jedi
    ;; :config
    ;; (with-eval-after-load "lsp-mode"
      ;; (add-to-list 'lsp-disabled-clients 'pyls)
      ;; (add-to-list 'lsp-enabled-clients 'jedi)))

  (setq python-shell-interpreter "/usr/bin/python3")

  ;; pour éviter les erreurs de doctstring	
  (setq lsp-pylsp-plugins-pydocstyle-enabled nil)

#+end_src

#+begin_src emacs-lisp :tangle no

  (use-package python-mode
    :config
    ;; (setq python-shell-interpreter "python3")
    ;; (setq python-shell-interpreter "ipython")
    ;; (setq python-shell-interpreter-args "~/anaconda3/lib/python3.8/site-packages/bokeh/_testing/plugins/ipython.py") 
    (require 'dap-python)

    (add-to-list 'auto-mode-alist '("\\.rpy\\'" . python-mode))
    )


#+end_src
****** Java                                                        :Low:

#+begin_src emacs-lisp

    ;; (use-package aggressive-indent-mode)
  ;; (add-hook 'java-mode-hook #'aggressive-indent-mode)



    ;; pour corriger la variable $JAVA_HOME avec asdf. a supprimer ?
    (use-package exec-path-from-shell
      :after lsp-mode org-roam
      :config
      (exec-path-from-shell-initialize)
      )
    ;; (when (daemonp)
    ;; (exec-path-from-shell-initialize)
    ;; )

    (use-package lsp-java
      :config
      ;; (setq lsp-java-jdt-download-url  "https://download.eclipse.org/jdtls/milestones/0.57.0/jdt-language-server-0.57.0-202006172108.tar.gz")
      )
#+end_src

****** JavaScript

#+begin_src emacs-lisp
  ;; (use-package lsp-javascript-typescript)
#+end_src

****** Dart

Il faut aussi installer flutter sur asdf

#+begin_src emacs-lisp :tangle no
(use-package dart-mode)
(use-package lsp-dart)
(add-hook 'dart-mode-hook 'lsp)
#+end_src

